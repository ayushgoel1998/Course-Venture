import User from "../models/user"
import { hashPassword, comparePassword } from "../utils/auth";
import jwt from 'jsonwebtoken'

export const register = async (req, res) => {
    // console.log(req.body);
    // res.json("reg ister user from controller");
    try {
        //console.log(req.body);

        const { name, email, password } = req.body
        // validatio n  
        if (!name) return res.status(400).send("Name is Required")
        if (!password || password.length < 6) {
            return res.status(400).send("Password is required and should be minimum of 6 characters long");
        }

        let userExist = await User.findOne({ email }).exec();


        if (userExist) return res.status(400).send("Email is taken Already");


        const hashedPassword = await hashPassword(password)
        const user = new User({
            name, email, password: hashedPassword,
        }).save();

        //    console.log("saved user", user);
        return res.json({ ok: true });

    }
    catch (err) {
        console.log(err)
        return res.status(400).send("Error,Try again")
    }
};

// working on login page above code is for register page
// find the user and compare the hashed entered password with password save in DB
export const login = async (req, res) => {
    try {
        // console.log(req.body)
        const { email, password } = req.body;
        // check if DB has the user with the entered email
        const user = await User.findOne({ email }).exec();
        if (!user) return res.status(400).send("No User with this email found");

        // check password  two arguments plain password and hashed password
        const match = await comparePassword(password, user.password);
        if (!match) return res.status(400).send("Incorrect Password,Try again");
        // if all credentials are correct creat signed jwt token
        const token = jwt.sign({ _id: user._id }, process.env.JWT_SECRET, { expiresIn: "7d" });

        // return user and token to client,exclude hashed password
        user.password = undefined;
        //send token in cookie
        res.cookie('token', token, {
            httpOnly: true,  // any one not able to get details through javascript console from browswer
            // secure:true // only works on https
        });
        // send user as json response
        res.json(user);
    }
    catch (err) {
        console.log(err)
        return res.status(400).send('Error,Try again')
    }
}

export const logout = async (req, res) => {
    try {
        res.clearCookie('token');
        return res.json({ message: "SignOut Success" });
    }
    catch (err) {
        console.log(err);
    }
}

export const currentUser = async (req, res) => {
    try {
        const user = await User.findById(req.user._id).select('-passoword').exec();
        console.log("Current_User", user);
        return res.json({ ok: true });
    }
    catch (err) {
        console.log(err);
    }
}