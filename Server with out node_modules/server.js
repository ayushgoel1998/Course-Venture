
import express from 'express';
import csrf from 'csurf'
import cors from 'cors';
import { readdirSync } from "fs";
import mongoose from 'mongoose'
import cookieParser from "cookie-parser"
// tradtional nodejs syntax of importing because it will give some issue in morgan if we import using express syntax
const morgan = require('morgan');

require('dotenv').config();

const csrfProtection = csrf({ cookie: true });


// create express app
const app = express();

// db connection
// i have change this from process.env.DATABASE to "mongodb://localhost:27017/edemy"
mongoose.connect(process.env.DATABASE, {
    useNewUrlParser: true,
    useFindAndModify: false,
    useUnifiedTopology: true,
    useCreateIndex: true,
}).then(() => console.log("*****Db Connected********"))
    .catch((err) => console.log("DB connection Error=>", err));


// apply middlewares {functions which will execute after getting data from frontend and before sending response to frontend}

app.use(cors());
app.use(express.json());
app.use(cookieParser());
app.use(morgan("dev"));


// custom own middle ware 
// app.use((req, res, next) => {
//     console.log("this is my own middle ware");
//     next();
// });

// route
readdirSync("./routes").map((r) =>
    app.use("/api", require(`./routes/${r}`))
);

//csrf

app.use(csrfProtection);

app.get('/api/csrf-token', (req, res) => {
    res.json({ csrfToken: req.csrfToken() });
});

const port = 8000;

app.listen(port, () => console.log(`server is running on port ${port}`));

